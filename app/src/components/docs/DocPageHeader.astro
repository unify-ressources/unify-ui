---
import DocResLink from "./base/DocResLink.astro";

type Props = {
    breadcrumbsMain: { href: string; text: string };
    breadcrumbsWords: string[];
    title: string;
    subTitle?: string;
    links: Record<string, string>[] | undefined;
}
const {
    breadcrumbsMain,
    breadcrumbsWords: words,
    title,
    subTitle: description,
    links,
} = Astro.props;
---

<header class="pt8 pb5 b-b b-border rd-lg space-y-2.5">
    <ol
        class="pb3 flex items-center gap2.5 whitespace-nowrap text-fg text-sm capitalize"
    >
        <li>
            <a
                aria-label="Go to Docs Index page"
                href={breadcrumbsMain.href}
                class="flex items-center  gap-1"
            >
                {breadcrumbsMain.text}
                <span aria-hidden="true" class="flex i-ph-caret-right"></span>
            </a>
        </li>
        {
            words.map((word, index) => (
                <li
                    class:list={[
                        {
                            "truncate text-fg-subtext":
                                index === words.length - 1,
                            "flex items-center gap-1": index < words.length - 1,
                        },
                    ]}
                >
                    <span class="flex">{word}</span>
                    {index === words.length - 1 ? null : (
                        <span aria-hidden="true" class="flex i-ph-caret-right" />
                    )}
                </li>
            ))
        }
    </ol>
    <h1 class="text-2xl md-text-2xl font-semibold text-fg-title !mb0">
        {title}
    </h1>
    <p class="text-fg">
        {description}
    </p>
    {
        links ? (
            <div class="flex items-center flex-wrap gap2">
                {links.map((link) =>
                    Object.entries(link).map(([key, value]) => (
                        <DocResLink href={value} text={key} />
                    )),
                )}
            </div>
        ) : null
    }
</header>
