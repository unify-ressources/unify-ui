---
import CopyBtnCode from "@components/vuejs/CopyBtnCode.vue";
import CodeViewBox from "./CodeViewBox.astro";
import type { SupportedLanguage } from "@/types/index";

type Props = {
    data: {
        lang: SupportedLanguage;
        name: string;
        code: string;
    }[];
};

const { data } = Astro.props;
---

<slot/>
<div data-pagefind-ignore data-tab-fx-site data-fx-tabs class="b b-border-high/30 rd-lg bg-[--astro-code-color-background] mt6 first-mt0">
    <div data-tab-list-wrapper class=" b-b b-b-gray900/20 d-flex-between px5 items-center h10">
        <ul
            role="tablist"
            data-tab-list
            class="flex items-center gap-x3"
        >
            {
                data.map((item) => (
                    <li
                        role="presentation"
                        class="d-flex-items-center pb2 b-b-2 b-b-transparent has-[aria-expanded=true]:b-b-current text-gray300 has-[aria-expanded=true]:text-gray50"
                    >
                        <a
                            data-tabs-trigger
                            data-target={item.name}
                            href={`#${item.name}`}
                            role="tab"
                            aria-controls={item.name}
                            aria-label={`${item.name}`}
                            class="flex hfull items-center aria-expanded-bg-gray800 dark-aria-expanded-bg-gray900 rd-md px3 hover-bg-light"
                        >
                            {item.name}
                        </a>
                    </li>
                ))
            }
        </ul>
        <div class="flex">
            <CopyBtnCode client:load />
        </div>
    </div>
    <div
        data-panels-container
        class={`pt3 wfull flex b b-border-high bg-white dark-bg-black/30 rd-lg`}
    >
        {
            data.map((item, index) => (
                <section
                    data-tab-panel
                    aria-labelledby={item.name}
                    role="tabpanel"
                    id={item.name}
                    tabindex="0"
                    aria-hidden={`${index === 0 ? "false" : "true"}`}
                    data-state={`${index === 0 ? "active" : "inactive"}`}
                    class="hidden fx-active-flex active-outline-gray800/50 focus-outline-gray800/50 wfull"
                >
                    <CodeViewBox code={item.code} lang={item.lang} class="" unstilled/>
                </section>
            ))
        }
    </div>
</div>
